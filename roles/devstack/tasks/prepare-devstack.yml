---
- name: Create an Empty File for Devstack Sysctl Parameters
  copy:
    content: ""
    dest: /etc/sysctl.d/99-sysctl-devstack.conf
    force: no


- name: Configure Sysctl Parameters for Devstack
  lineinfile:
    path: /etc/sysctl.d/99-sysctl-devstack.conf
    line: "{{ item }}"
  with_items:
    - "vm.overcommit_memory = 1"
    - "net.ipv4.ip_forward = 1"
    - "net.ipv4.conf.all.rp_filter = 0"
    - "net.ipv4.conf.default.rp_filter = 0"


- name: Apply Sysctl Parameters
  command: sysctl --system


- name: Stop Firewalld
  service: name=firewalld state=stopped enabled=no


#  Upgrade packages to latest version
#- name: Update All Packages
#  package: name=* state=latest update_cache=yes
#  when: ansible_os_family == 'RedHat' or ansible_os_family == 'CentOS' or ansible_os_family == 'Rocky'


- name: Enable Legacy Network
  import_tasks: enable-legacy-network.yml


#  No need due to RDO requires SELinux Permissive
#- name: Disable SELinux Policy
#  import_tasks: disable-selinux.yml


- name: Add Stack User
  user:
    name: stack
    shell: /bin/bash
    create_home: true
    home: /opt/stack
    state: present


- name: Add Sudo User for Stack
  shell: |
    echo "stack ALL=(ALL) NOPASSWD: ALL" | sudo tee /etc/sudoers.d/stack
  ignore_errors: true
  args:
    executable: /bin/bash


- name: Change Permission
  shell: |
    sudo chmod 755 /opt/stack
  ignore_errors: true
  args:
    executable: /bin/bash


- name: Check if the Devstack Source Code is Already Downloaded
  stat: path=/opt/stack/devstack
  register: devstack_dir_existed
- debug: msg={{ devstack_dir_existed }}


# --single-branch --branch release-{{ devstack.major_version }}.{{ devstack.minor_version }}
- name: Clone Devstack Source Code
  become_user: stack
  shell: |
    git -C "/opt/stack" clone https://git.openstack.org/openstack-dev/devstack
  register: git_clone_devstack
  ignore_errors: true
  when: devstack_dir_existed.stat.exists != True
- debug: msg={{ git_clone_devstack }}
  when: print_debug == true and devstack_dir_existed.stat.exists != True


#- name: Checkout the specific version
#  become_user: stack
#  shell: |
#    git checkout stable/2024.2
#  register: checkout_version
#  args:
#    chdir: /opt/stack/devstack
#- debug: msg={{ checkout_version }}
#  when: print_debug == true


# git checkout stable/xena
# git clone https://opendev.org/openstack/neutron.git
# git checkout zed-eom


- name: Reboot Required
  shell: ( /bin/sleep 5; /sbin/shutdown -r now "Ansible updates triggered" ) &
  ignore_errors: true
  register: reboot_required
  async: 120
  poll: 0
  notify:
    - Waiting for Server to Come Back After Reboot


- meta: flush_handlers

