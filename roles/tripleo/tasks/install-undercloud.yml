---
- name: Create an Empty File for Devstack Sysctl Parameters
  copy:
    content: ""
    dest: /etc/sysctl.d/99-sysctl-devstack.conf
    force: no


- name: Configure Sysctl Parameters for Devstack
  lineinfile:
    path: /etc/sysctl.d/99-sysctl-devstack.conf
    line: "{{ item }}"
  with_items:
    - "vm.overcommit_memory = 1"
    - "net.ipv4.ip_forward = 1"
    - "net.ipv4.conf.all.rp_filter = 0"
    - "net.ipv4.conf.default.rp_filter = 0"


- name: Apply Sysctl Parameters
  command: sysctl --system


- name: Install WSGI Python Module
  become_user: root
  shell: |
    dnf install -y mod_wsgi
    dnf install -y openvswitch3.4
  ignore_errors: true
  args:
    executable: /bin/bash


- name: Enable Open Vswitch
  shell: |
    sudo systemctl enable openvswitch
    sudo systemctl start openvswitch
    sudo systemctl start ovs-vswitchd.service
    sudo systemctl start ovsdb-server.service
  ignore_errors: true
  args:
    executable: /bin/bash


- name: Check if the Devstack Config Already Exists
  stat: path=/opt/stack/devstack/local.conf
  register: devstack_conf_exists
- debug: msg={{ devstack_conf_exists }}


- name: Copy Local.conf
  become_user: stack
  template:
    src: "{{ item }}.j2"
    dest: "/opt/stack/devstack/{{ item }}"
    mode: 0644
  register: copy_local_conf
  ignore_errors: true
  with_items:
    - "local.conf"
  when: devstack_conf_exists.stat.exists != True
- debug: msg={{ copy_local_conf }}
  when: print_debug == true and devstack_conf_exists.stat.exists != True


#- name: Install Devstack
#  become_user: stack
#  shell: |
#   ./stack.sh
#  ignore_errors: true
#  args:
#    chdir: /opt/stack/devstack
#    executable: /bin/bash



######################################################################################################################################################
# echo "192.168.0.72    undercloud.jtest.pivotal.io" >> /etc/hosts
# useradd stack
#
# echo "changeme" | passwd --stdin stack
#
#echo "stack ALL=(root) NOPASSWD:ALL" | sudo tee -a /etc/sudoers.d/stack
#
#chmod 0440 /etc/sudoers.d/stack
#
#
#- name: Replace OS Name Back to Rocky Linux
#  become_user: root
#  lineinfile:
#    dest: "/etc/os-release"
#    regexp: "{{ item.regexp }}"
#    line: "{{ item.line }}"
#    state: "{{ item.state }}"
#  with_items:
#    - { regexp: '^ID=', line: 'ID="rocky"', state: present, backrefs: no }
#  when:
#    - inventory_hostname in groups['master']
#    - gptext.major_version >= 3 and gptext.major_version >= 9.1
#    - gptext_installed.stat.exists != True

# dnf install https://trunk.rdoproject.org/centos9/component/tripleo/current-tripleo/python3-tripleo-repos-0.1.1-0.20230111082341.c73cb0f.el9.noarch.rpm

# sudo -E tripleo-repos -b stein current
# tripleo-repos current-tripleo


# dnf install https://trunk.rdoproject.org/centos9/component/tripleo/current-tripleo/python3-tripleoclient-20.0.1-0.20230324004502.75c5f40.el9.noarch.rpm


# Not working
# tripleo-repos current-tripleo ceph
#  yum install -y ceph-ansible

# openstack tripleo container image prepare default   --output-env-file containers-prepare-parameter.yaml

# openstack tripleo container image prepare default \
#  --local-push-destination \
#  --output-env-file ~/containers-prepare-parameter.yaml


