---
#- name: Copy Uninstall RDO Script
#  become_user: root
#  template:
#    src: "{{ item }}.j2"
#    dest: "/root/{{ item }}"
#    mode: 0755
#  register: copy_uninstall_el9s_script
#  ignore_errors: true
#  with_items:
#    - "remove-el9s-pkgs.sh"
#- debug: msg={{ copy_uninstall_el9s_script }}


#- name: Remove EL9s RDO Packages Remained
#  shell: |
#    ./remove-el9s-pkgs.sh
#  ignore_errors: true
#  args:
#    chdir: /root/
#    executable: /bin/bash


- name: Remove Podman Images
  shell: |
    sudo podman rm -af
    sudo podman rmi -af
  ignore_errors: true
  args:
    chdir: /root/
    executable: /bin/bash


- name: Remove directories generated by TripleO
  shell: |
    sudo rm -rf \
    /var/lib/tripleo-config \
    /var/lib/config-data \
    /var/lib/container-config-scripts \
    /var/lib/container-puppet \
    /var/lib/heat-config \
    /var/lib/image-service \
    /var/lib/mysql
  ignore_errors: true
  args:
    chdir: /root/
    executable: /bin/bash


- name: Cleanup systemd
  shell: |
    sudo rm -rf /etc/systemd/system/tripleo*
    sudo systemctl daemon-reload
  ignore_errors: true
  args:
    chdir: /root/
    executable: /bin/bash


- name: Remove EL9s RDO Packages Remained
  shell: |
    sudo rm -rf /home/stack/tripleo-deploy
    sudo rm -rf /var/lib/tripleo-heat-installer
    sudo rm -rf /home/stack/.tripleo
    sudo rm -rf /home/stack/.ansible
    sudo rm -rf /home/stack/.cache
    sudo rm -rf /home/stack/.config
    sudo rm -rf /home/stack/.config
    sudo rm -f /home/stack/containers-prepare-parameter.yaml
    sudo rm -f /home/stack/undercloud.conf
  ignore_errors: true
  args:
    chdir: /root/
    executable: /bin/bash


# sudo yum remove -y python-novajoin
# sudo yum remove -y python3-ipalib python3-ipaclient krb5-devel
# sudo dnf remove -y ceph-ansible
# sudo dnf remove -y python*-tripleoclient
# sudo dnf remove -y python3-tripleo-repos






- name: Enable SELinux Policy
  import_tasks: enable-selinux.yml


- name: Disable Legacy Network
  import_tasks: disable-legacy-network.yml


- name: Flush IPtables
  become_user: root
  shell: |
    iptables -F
    /sbin/iptables-save > /etc/sysconfig/iptables
    cat /etc/sysconfig/iptables
  ignore_errors: true
  args:
    executable: /bin/bash


- name: Start Firewalld
  service: name=firewalld state=started enabled=no
  ignore_errors: true


- name: Remove Stack User
  user:
    name: stack
    shell: /bin/bash
    home: /opt/stack
    state: absent
    remove: true
    # group: stack


- name: Reboot Required
  shell: ( /bin/sleep 5; /sbin/shutdown -r now "Ansible updates triggered" ) &
  ignore_errors: true
  register: reboot_required
  async: 120
  poll: 0
  notify:
    - Waiting for Server to Come Back After Reboot


- meta: flush_handlers


